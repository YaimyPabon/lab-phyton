Time taken by reduction operation: 0.2688567638397217 seconds
255 ms ± 475 µs per loop (mean ± std. dev. of 2 runs, 1 loop each)

 	 Computing the sum of numbers in the range [0, value): 499999500000

Time taken by for loop: 0.20177030563354492 seconds
Time taken by sum function: 0.03174424171447754 seconds

Using %timeit magic command (for loop):
208 ms ± 8.97 ms per loop (mean ± std. dev. of 2 runs, 1 loop each)

Using %timeit magic command (sum function):
29.9 ms ± 59.7 µs per loop (mean ± std. dev. of 2 runs, 10 loops each)

Total sum computed by for loop: 499999500000
Total sum computed by sum function: 499999500000
Time taken by for loop: 0.6523303985595703 seconds
Time taken by NumPy sum function: 0.0028314590454101562 seconds

Using %timeit magic command (for loop):
630 ms ± 904 µs per loop (mean ± std. dev. of 2 runs, 1 loop each)

Using %timeit magic command (sum function):
1.41 ms ± 10.8 µs per loop (mean ± std. dev. of 2 runs, 1,000 loops each)

Total sum computed by for loop: 499999500000
Total sum computed by NumPy sum function: 499999500000

Using %timeit magic command (for loop with @njit):
1.52 ms ± 10.1 µs per loop (mean ± std. dev. of 2 runs, 1 loop each)

Using %timeit magic command (sum function with @njit):
994 µs ± 2.82 µs per loop (mean ± std. dev. of 2 runs, 1 loop each)
Time taken by for loop with @njit: 0.0015189647674560547 seconds
Time taken by NumPy sum function with @njit: 0.000988006591796875 seconds

Total sum computed by for loop with @njit: 499999500000
Total sum computed by NumPy sum function with @njit: 499999500000
Time taken by reduction operation: 0.2560906410217285 seconds
256 ms ± 855 µs per loop (mean ± std. dev. of 2 runs, 1 loop each)

 	 Computing the sum of numbers in the range [0, value): 499999500000

Time taken by for loop: 0.19400525093078613 seconds
Time taken by sum function: 0.03128767013549805 seconds

Using %timeit magic command (for loop):
194 ms ± 1.38 ms per loop (mean ± std. dev. of 2 runs, 1 loop each)

Using %timeit magic command (sum function):
30 ms ± 77.5 µs per loop (mean ± std. dev. of 2 runs, 10 loops each)

Total sum computed by for loop: 499999500000
Total sum computed by sum function: 499999500000
Time taken by for loop: 0.6429989337921143 seconds
Time taken by NumPy sum function: 0.001428365707397461 seconds

Using %timeit magic command (for loop):
626 ms ± 935 µs per loop (mean ± std. dev. of 2 runs, 1 loop each)

Using %timeit magic command (sum function):
1.41 ms ± 14.2 µs per loop (mean ± std. dev. of 2 runs, 1,000 loops each)

Total sum computed by for loop: 499999500000
Total sum computed by NumPy sum function: 499999500000

Using %timeit magic command (for loop with @njit):
1.48 ms ± 8.24 µs per loop (mean ± std. dev. of 2 runs, 1 loop each)

Using %timeit magic command (sum function with @njit):
1.04 ms ± 4.19 µs per loop (mean ± std. dev. of 2 runs, 1 loop each)
Time taken by for loop with @njit: 0.0015330314636230469 seconds
Time taken by NumPy sum function with @njit: 0.0010402202606201172 seconds

Total sum computed by for loop with @njit: 499999500000
Total sum computed by NumPy sum function with @njit: 499999500000
